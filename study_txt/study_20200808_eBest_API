4) API를 이용한 알고리즘 개발
 (2)업종별 PER 분석을 통한 유망 종목 찾기
  - PER 지표는 주식 초보자에게도 익숙한 대표적인 투자 지표 중 하나입니다. 단순히 PER 값이 10 이하이면 ‘싸다’라고 판단하거나 20 이상이면 ‘비싸다’라고 판단하면 안 된다는 것도 이미 알고 있을 것입니다.

이러한 PER 지표가 가진 문제를 보완하는 여러 가지 알고리즘이 있습니다. 가장 간단한 알고리즘 중 하나는 종목이 속하는 업종의 평균 PER을 구한 후 평균값보다 낮다면 상대적으로 저평가돼 있다고 판단하고, 평균보다 높다면 고평가돼 있다고 판단할 수 있을 것입니다. 물론 이 알고리즘에도 오류가 있습니다.

예를 들어, 업종별로도 우량 기업과 비우량 기업이 섞여 있는데 단순히 업종에 속하는 모든 기업의 평균값을 이용하는 것은 PER 값을 왜곡할 수 있습니다. 따라서 투자하려는 종목과 비슷한 규모의 회사 위주로 평가 그룹을 정하고 해당 그룹에 대한 평균 PER 값을 분석하는 것이 더 좋은 알고리즘이라 할 수 있습니다.

더좋은알고리즘의개발은여러분에게맡기기로하고이번절에서는업종별PER 분석을통한유망종목을 찾는 알고리즘을 구현하는 과정을 설명하겠습니다. 먼저 업종별로 평균 PER을 계산하려면 업종별로 종목 코드 리스트를 만들어야 합니다.

CYBOS Plus의 도움말 파일을 참조하면 CpCodeMgr 클래스의 GetIndustryList 메서드를 사용하면 업종별 코드 리스트를 구할 수 있습니다. 먼저 CpCodeMgr 클래스의 인스턴스를 생성해 봅시다.

업종별 코드 리스트를 구하기 위해 GetIndustryList 메서드를 호출합니다. GetIndustryList 메서드는 업종별 코드 리스트를 파이썬 튜플 형태로 반환합니다.

industryCodeList = instCpCodeMgr.GetIndustryList()
각 업종별 코드에 해당하는 업종명을 출력해보면 어떤 업종이 있는지 더 정확히 파악할 수 있습니다. 업종별 코드에 해당하는 업종명을 구하려면 GetIndustryName 메서드를 사용하면 됩니다. 이때 industryCodeList에는 많은 수의 업종별 코드가 존재하므로 반복문을 사용해 업종별 코드에 대한 업종명을 출력하면 됩니다.

for industryCode in industryCodeList:
    print(industryCode, instCpCodeMgr.GetIndustryName(industryCode))
지금까지 작성한 코드는 다음과 같습니다.

import win32com.client

instCpCodeMgr = win32com.client.Dispatch("CpUtil.CpCodeMgr")
industryCodeList = instCpCodeMgr.GetIndustryList()

for industryCode in industryCodeList:
    print(industryCode, instCpCodeMgr.GetIndustryName(industryCode))
이 코드를 실행해 유가증권시장의 업종별 코드와 이에 대응하는 업종명을 확인해보기 바랍니다. 출력 결과를 살펴보면 음식료품, 화학, 의약품과 같은 업종뿐 아니라 다양한 지수 업종도 함께 출력되는 것을 확인할 수 있습니다.

C:\Anaconda3\python.exe E:/GitHub/book/ch10/19.py
001 종합주가지수
002 대형(시가총액)
003 중형(시가총액)
004 소형(시가총액)
005 음식료품
006 섬유,의복
007 종이,목재
008 화학
009 의약품
010 비금속광물
…
유가증권시장에서 ‘음식료품’ 업종에 속하는 종목의 종목 코드 리스트를 구한 후 해당 리스트에 속하는 종목의 종목명을 출력해 봅시다. CYBOS Plus 도움말을 참조하면 GetGroupCodeList 메서드가 업종 코드에 해당하는 종목 코드 리스트를 반환하는 것을 알 수 있습니다.

예를 들어, 다음은 유가증권시장의 ‘음식료품’ 업종에 속하는 종목 코드 리스트를 구한 후 각 종목의 종목 코드와 종목명을 출력하는 코드입니다.