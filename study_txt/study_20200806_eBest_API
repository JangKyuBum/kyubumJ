2) 기초 API 익히기
 (3) PER, EPS 데이터 구하기
  - PER(Price Earning Ratio, 주가 이익 비율)은 주가를 주당순이익(EPS)으로 나눈 값으로서 주가의 수익성 지표로 자주 활용된다. 예를 들어, A사의 주가가 5만 원이고 1주당 순이익이 1만 원이면 PER은 5(배)가 된다. 높은 PER은 기업이 영업활동으로 벌어들인 이익에 비해 주가가 고평가되고 있음을 의미하고, 반대로 낮은 PER은 주가가 상대적으로 저평가되고 있음을 의미한다.

물론 단순히 PER 수치만을 가지고 주가가 고평가 또는 저평가됐다고 판단하기는 어렵다. 예를 들어, 기업의 성장성에 높은 점수를 주는 경우에는 상대적으로 PER이 높은 수치를 보인다. 또한 업종에 따라서도 PER을 평가하는 기준이 다를 수 있다. 예를 들어, 의료 분야의 종목들은 성장성이 높으므로 제조 업종의 PER보다 높게 형성돼 있다.

이번 절에서는 종목별로 PER과 EPS 데이터를 구하는 프로그램을 작성한다. 먼저 CYBOS Plus 도움말 파일의 검색 탭을 이용해 ‘per’이라는 키워드로 검색하면 MarketEye 클래스에서 PER을 지원하는 것을 확인할 수 있다.

MarketEye 클래스의 통신 종류를 살펴보면 역시 Request/Reply 방식이다.
etInputValue 메서드를 이용해 타입 0에 요청하고자 하는 필드 값을 설정합니다. 예를 들어, 현재가, PER, EPS, 최근분기년월 데이터를 요청하려면 (4, 67, 70, 111)을 입력하면 된다.

마지막으로 GetDataValue 메서드를 이용해 서버로부터 반환된 데이터를 출력하면 된다. 이때 GetHeaderValue 메서드를 통해 반환되는 필드의 개수나 종목 개수를 확인할 수도 있지만 이미 알고 있다면 바로 GetDataValue 메서드를 사용해도 된다.

GetDataValue 메서드에서 첫 번째 인자는 필드에 대한 인덱스이고 두 번째 인자는 종목의 인덱스이다. 지금은 대신증권 종목 하나에 대한 데이터를 요청했으므로 두 번째 인자의 값은 0이 된다.

앞서 필드 항목으로 현재가, PER, EPS, 최근분기연월을 요청했으므로 첫 번째 인자로 각각 0, 1, 2, 3을 지정하면 된다.

# GetData
print("현재가: ", instMarketEye.GetDataValue(0, 0))
print("PER: ", instMarketEye.GetDataValue(1, 0))
print("EPS: ", instMarketEye.GetDataValue(2, 0))
print("최근분기년월: ", instMarketEye.GetDataValue(3, 0))