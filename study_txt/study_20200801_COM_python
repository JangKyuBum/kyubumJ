COM이란 마이크로소프트에서 개발한 기술이다. Component Object Model이라는 용어가 의미하듯이 여러 컴포넌트 객체를 이용해 프로그램을 개발하는 모델을 의미한다. 컨테이너를 이용해 집을 지으면 쉽고 빨리 집을 지을 수 있는 것처럼 프로그램을 개발할 때도 특정 기능을 위해 개발된 Component Object를 이용하면 프로그램을 더 쉽고 빠르게 개발할 수 있다.

컴포넌트 객체란 파이썬으로 치면 클래스로부터 만들어지는 객체와 같은 것이라 이해하면 된다. 이렇게 보면 	COM이라는 기술의 개념은 기존의 객체지향 프로그래밍과 크게 다르지 않아 보이나 COM은 여기서 더 나아가서 프로그래밍 언어와 상관없이 개발된 객체를 사용할 수 있게 해준다. 예를들어 COM을 이용하면 C++ 같은 프로그래밍 언어로 개발된 객체도 파이썬에서 사용할 수 있다.

대신증권의 경우 C/C++로 구현된 CpStockCode 클래스를 제공하는데 이 클래스와 비슷한 기능을 제공하는 클래스를 파이썬으로 구현하여 공부한다.

CpStockCode 클래스는 생성자(__init__)와 GetCount, NameToCode라는 메서드를 갖고 있다. 여기서 GetCount 메서드는 주식 종목수를 리턴하는 메서드이고, NameToCode 메서드는 종목명을 입력하면 해당 종목에 대한 종목 코드를 리턴하는 메서드이다.

*KRX 웹페이지(www.krx.co.kr)에서 제공하는 주식 종목 검색기에서 종목명을 입력하면 종목코드를 확인할 수 있다. 이와 비슷하게 증권사의 API에도 종목명을 입력하면 종목 코드를 반환하는 메서드가 있다. 여러분은 이러한 API를 프로그램 내에서 호출함으로써 종목 코드를 프로그램 내에서도 쉽게 얻을 수 있다.

객체와 인스턴스라는 용어는 같은 의미이기 때문에 혼용하더라도 큰 무리는 없다. 다만, instCpStockCode와 같이 클래스를 통해 생성된 인스턴스 자체를 지칭할 때는 ‘무슨 무슨 객체’라는 표현을 주로 사용한다. 이와 달리 ‘instCpStockCode 객체는 CpStockCode 클래스의 인스턴스’라는 표현에서처럼 객체가 어떤 클래스로부터 생성된 것인지를 의도할 때는 인스턴스라는 용어를 사용한다.